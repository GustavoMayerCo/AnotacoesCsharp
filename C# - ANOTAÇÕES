 Exemplo:. 

Console.WriteLine = o line serve para quebrar linha no console \par
outror jeito é usar \n no final. 

exemplo Console.write("Oi\n")

Console.readline(); = ler no console 

para chamar no console, Console.writeLine();

*VARIÁVEIS  > 


 (VARIÁVEIS DE TIPOS) 

 int - 140 
 float - 15.5
 bool - true ou false 
 string - "text"
 char - caracter - 'a'
---Tambem da para usar apenas VAR (generica)
Var = o c# advinha qual tipo de variáveis
MAS : 

( pouco usada, porque pode confundir e atrapalhar na lógica do prog) 




 *CONSTANTES = (NUNCA MUDA)
 
Exemplo:. const float PI = 3,14f;

-

Exemplo:. De como capturar oque o usu\'e1rio digita no console 

            Console.WriteLine("Escreva seu nome: ");
aqui captura  >  string nome = Console.ReadLine();
            Console.Write("Seja bem vindo, ");
  aqui responde usando a variável acima >  Console.Write(nome);
            
            
  * OPERAÇÕES ARITMÉTICAS :. exemplo 
  
int numeroqualquer = 6 + 6; 

Console.WriteLine(numeroqualquer); /  =  12 

float numeroDiv = 5f/2; 
//quando for numero quebrado, usar float e junto ao numero letra F 

Console.WriteLine(numeroDiv); 2,5 


C# SEGUE REGRA DE SINAIS = 2 + 2 * 10 =  22 
(PARA SER 40, O CERTO é (2 + 2) * 10 = 40 


 CONDIÇÕES 
 
> MAIOR 
< MENOR 
>= MAIOR OU IGUAL 
<= MENOR OU IGUAL       
== SINAL DE IGUALDADE
!= IGUAL OU DIFERENTE    
 -------------
     CONDICIONAIS : 

if // se (TRUE)

else // se não (FALSE)  

            if (17 >= 18)
            {
                Console.WriteLine("Verdade");

            }
            else
            {
                Console.WriteLine("Falso");
            }

           ____________________
           
            VAR  idade = 18;

            if ( idade  >= 18)
            {
                Console.WriteLine("Pode fazer a carteira de Motorista");

            }
            else
            {
             Console.WriteLine("Ainda n\'e3o pode fazer a carteira de Motorista");

            }



 * OPERADORES LÓGICOS 

 && ( E OU AND )     || ( OU / OR ) 

exemplo 
&& ->  TRUE && FALSE = FALSE ( 0 && 0 = 0 / 1 && 0 = 0 / 1 && 1 = 1 ) 

       FALSE && TRUE = FALSE  ( SÓ É  VERDADEIRO QUANDO OS DOIS SÃO VERDADEIROS )
       
       TRUE && TRUE = TRUE      

JÁ O || É  O CONTRÁRIO DE "&&", O || SÓ PRECISA DE UM DELES VERDADEIROS ( 1 ) QUE ELE SE TORNA TRUE 

exemplo 

||    TRUE || TRUE = TRUE ( 0 || 0 = 0 / 0 || 1 = 1 / 1 || 0 =  1 ) 
      FALSE || TRUE = TRUE 
      FALSE || FALSE = FALSE


  *  TRABALHANDO COM OPERADORES LÓGICOS NA PRATICA : 


            //o readline captura um texto.
            //mas eu quero que ele capture um numero 
            //então eu uso int.parse(console.readline())
            // ai ele converte text em number = parse = converter

            Console.WriteLine("Digite sua idade: ");

            int idade = int.Parse(Console.ReadLine());
         
            if (idade >= 0 && idade <= 11)
            {
                Console.WriteLine("Você é uma criança");
                
            } else if (idade >=12 && idade <= 18)
            {
                Console.WriteLine("Voc\'ea \'e9 um adolescente!");

            } else if (idade >= 19 && idade <= 60)
            {
                Console.WriteLine("Você é um adolescente");
            }
            else 
            {
                Console.WriteLine("Você é um idoso ");
            }

            Console.ReadLine();

   ---------------------------
*( FUNÇÕES E PARAMÊTROS )

namespace TESTES
{
    class Program
    {
        static void Main(string[] args)
        {
            GerarPreço(60, "Academia");
            GerarPreço(300, "Cadeira ergonomica");
            Console.ReadLine();
        }
    
         static void GerarPreço(int preço, string nome  )
        {
            Console.WriteLine("Nome do produto: "+nome );//concatenação
            Console.WriteLine(preço);
 
outro exemplo :. 
 static void GerarPre\'e7o(int preço )
        {

            int valorfinal = preço + 10;
            Console.WriteLine("Preço final com acrescimo de taxa : " + valorfinal);
        }
    
       }
    }

* ( ARRAY )= "SUPER VARIÁVEL"
// ele so armazena dados do tipo que voce declarar 

exemplo:.  int[] = numeros inteiros e etc

outro exemplo\

string[] produtos = new string [2] { "FIFA", "BIKE" }

// [2] É O TAMANHO QUE O ARRAY SUPORTA, QUANDO COLOCAR UM NUMERO NAO PODE 
MAIS MUDAR, SE COLOQUEI { 2 } STRING, SÓ CABE DUAS STRING // "BYTES"

exemplo que deu certo; 
 
string[] produtos = new string[2] 
            {"FIFA",// 0
            
                "GTA V"\};//1

            Console.WriteLine(produtos[0]);
           
            Console.ReadLine();

(se eu quiser dps alterar o valor de um produto, -> produto[0] = "fifa2021"; 

ai quando eu chamar o produto[0], ele vai vim o fifa2021 e não só  fifa ) 

__________________________________________________________

* OUTRO TIPO DE ( ARRAY ) MAIS SIMPLES É

 EXEMPLO: 
 
                              0    1    2 
             int[] valores = { 40, 55, 66 };
                               
            Console.WriteLine(valores[2]);

            Console.ReadLine();
        
pronto. array criada

_________________________
         
          ( ENUM ) //  

class Program
  
    {
        enum cor {preto, verde, amarelo, rosa}
        enum opção {criar = 1, editar , deletar}

             static void Main(string[] args)
        {

            Console.WriteLine("Seleciona uma das opções: ");
            
            Console.WriteLine("1-criar\n2-editar\n3-deletar");
   
            
            //truque para nao precisar criar um writeline para
            //cada item

             int index = int.Parse(Console.ReadLine());
            opção opçãoSelecionada = (opção)index;

            Console.WriteLine(opçãoSelecionada);
            Console.ReadLine();
          
        }
    }  
    
    

      * WHILE// ENQUANTO FOR VERDADE, FAÇA          
      
      
      CUIDADO: não esqueça de incrementar ou se assegurar que sua condição pode ser falsa em algum momento, 
       pois caso contrario você entrará em um loop infinito, ou seja, 
        a condição nunca será falsa e o loop vai continuar até travar a máquina.


WHILE NADA MAIS É DO QUE UM LAÇO DE REPETIÇÃO INFINITO,
PARA QUE ELE POSSA PARAR, UMA DAS FORMAS É .

Exemplo:. 
contador = contador +1; ( FORMA SIMPLIFICADA) OU CONTADOR++
AI ELE PARA DE FAZER LOOPS, DEPENDENDO DO NUMERO QUE 
FOI COLOCADO NA VARIÁVEL 

{INT CONTADOR < 5 } 
USANDO A FORMA REDUZIDA, ELE PARA NA LINHA 5 

FORMA REDUZIDA DE (CONTADOR = CONTADOR + 1;)\par


 ________________________
 
( ESTRUTURA DE REPETIÇÃO ) 
 
 class Program

    {
        static void Main(string[] args)
        {

            int contador = 0;
            while ( contador < 5)
            {
                Console.WriteLine(contador);
                Console.WriteLine("Rodando while");
                
                 //contador = contador + 1;
                //posso mudar para contador++
              
                  contador++;
            }
            Console.WriteLine("FIM DA LINHA");
            Console.ReadLine();
_____________________________________

 * DO WHILE: 
 
 AO CONTRARIO DE "WHILE", O DO WHILE VAI RODAR
NEM QUE SEJA UMA UNICA VEZ, MESMO SENDO FALSE. 

 
  do  
  {
    console.writeline("do while");

\}while ( 100 < 10 ); 


// o while nunca rodaria isso, porque essa condição é falsa
// ja o do while, roda uma vez. 

 ___________________________________________________


     * FOR ( É UMA FORMA REDUZIDA DE WHILE) 

AO INVÉS DE FAZER TODO AQUELE CÓDIGO DO WHILE, PODEMOS FAZER ASSIM.

for(int contador = 0; contador < 10 ; contador ++ ). 

________________________________________________________
        (.ToString("F2")); ele deixa só duas casas decimais depois do ponto.)

           double saldo = 14.3568;

            Console.WriteLine(saldo.ToString("F2"));
            
            Exemplo real > Console.WriteLine(nome + " tem " + idade + " Anos e " + saldo.ToString("F3") + " na conta bancária ");
            
            
__________________________________________________________




            int idadeDejoao = 17;
            int quantidadeDePessoas = 2;
                                                                 // se usar && ele tem que vencer as duas, ja o || precisa vencer so uma para ser true 
             if(idadeDejoao >= 18 || quantidadeDePessoas>= 2 )  // se o resultado vencer uma das > ele fica true, caso contrario. vai para o else 
            {
                 Console.WriteLine(" pode entrar");
            
              }else
          
            {
                  Console.WriteLine("ele é menor de idade e nao esta acompanhado");
            }




___________________________________________________________________________________________________________________________



            DOUBLE SALARIO = 5000.0;

            if(salario >= 1900.0 && salario <= 2800.0)// com && ele tem que confirmar duas vezes, se uma tiver errada, ele passa pra proxima 
                // para ter 7.5 de ir o salario tem que estar entre 1900 e 2800. caso ele nao estiver entre isso, vai para proxima e assim em diante  
            {
                Console.WriteLine("o IR e de 7.5%");
          
            } else if (salario>= 2800.01 && salario <= 3751.0)  // && = E... ELE PRECISA DE DUAS CONFIRMAÇÕES PARA COMPILAR, CASO CONTRARIO, ELE VAI PARA A PROXIMA 
            {
                Console.WriteLine("o IR e de 15%");

            }else if (salario >= 3751.01 && salario <= 4664.0)
            {
                Console.WriteLine("o IR é de 22% ");
            }else
            {
                Console.WriteLine("TA GANHANDO BEM PAGA 33 DE IR ");
            }

            Console.ReadLine();
            
            
            
            
            
            ____________________________________________________________________________________________________
         
            MUDANDO DE WHILE PARA FOR ->
            
            
            //WHILE - ENQUANTO FOR VERDADE FAÇA 
         
                        for (int contador = 0; contador < 10; contador++)
                                      0       0<10        incremento (toda vez que o for passar pelo loop e 0 for menor que 10 ele incrementa 1) 
                                                                      ( quando passar de novo, ele vai ser 2 e assim sucetivamente)  
                
                Console.WriteLine(contador);

            -

            //MODO WHILE DE FAZER
            int contador = 0;

            while (contador <= 10) - //EXPRESSÃO BOOLEANA - O WHILE SÓ É EXECUTADO QUANDO ESSA FUNÇÃO BOOLEANA FOR TRUE 
            
            {
                Console.WriteLine(contador);
                contador++;
            }

           ____________________________________________________________________________________________________________
           
           
           ( W3SCHOOLS.COM ) - LER DOCUMENTAÇÃO 
           
           -----------------------------------------
           
           
       ->     BREAK - ELE ENCERRA O LOOP ( POR CEMPLO, SE FOR USADO EM ALGUM FOR OU WHILE.)
            Para a execução do laço mais interno que contém o comando break e continua executando os laços mais externos.
            
           ( Correta. Muito bem! O break irá interromper apenas o laço de repetição mais interno que o contém.)
            
      
           REVISAO BREAK E FOR´S (APROFUNDANDO LAÇOS E LAÇOS ANINHADOS COM BREAK) 
           
          
          
          
           - CLASSES-
           
          COMO CRIAR UMA CLASSE 
          
           - public class NomeDaClasse{                     ( se quiser que ela seja publica) 
           
           (DEFININDO OS OBJETOS DA CLASS)
           
           public string Titular; 
           public int Conta;
           public double Saldo;
           
           } 
           
           
          - COMO TROCAR O NOME DA CLASSE, ATRIBUINDO OUTRO NOME P/ USAR
          
           NomeDaClasse NomeNovoDaClasse = new NomeDaClasse();
          
          - COMO MANIPULAR OS DADOS DESSA CLASSES E SEUS OBJETOS - 
         
          * MODELO 1 - NO MODELO 1, MANIPULAMOS OS DADOS DENTRO DA CLASSE DO PROG, FICANDO APARENTE JUNTO COM OUTROS COMANDOS
          
          NomeNovoDaClasse.titular = "GustavoM";
          NomeNovoDaClasse.conta = 55334488;
          NomeNovoDaClasse.saldo = 100.0;
          
          Console.WriteLine(NomeDaClasse.titular); 
          Console.WriteLine(NomeDaClasse.conta);
          Console.WriteLine(NomeDaClasse.saldo); 
                   
                   
           -
           
           
         *  MODELO 2- CHAMAMOS DE VALORES PADRÕES - ESSE MODELO JA DEIXAMOS NA PROPRIA CRIAÇÃO DA CLASSE OS DADOS 
           
           public class NomeDaClasse
           {

           public string titular = "Joao";
           public int agencia;
           public int conta;
           public double saldo = 100.0;

           }
           
            NomeDaClasse NomeDaClasseNova = new NomeDaClasseNova();        

            Console.WriteLine(NomeDaClasseNova.titular);
            Console.WriteLine(NomeDaClasseNova.saldo);
            Console.ReadLine();

           
           -OPERADOR LÓGICO 
            
            && E = AS DUAS OPERAÇÕES PRECISAM SER VERDADEIRA PARA DAR TRUE / =  FALSE && TRUE = FALSE / = TRUE && TRUE = TRUE/
            
            
            || OU = SÓ UMA DAS OPERAÇOES PRECISA SER VERDADEIRA PARA DAR TRUE /  = FALSE || TRUE = TRUE/  = TRUE && FALSE = TRUE / 
            
            
            !  NAO = AQUI INVERTE O RESULTADO, POR EXEMPLO SE FOR !TRUE = ENTÃO VAI SER FALSE/ !TRUE = FALSE / !FALSE = TRUE 
           
           
           
           - ESTRUTURA CONDICIONAL 
               
               SIMPLES:             
            IF (CONDIÇÃO)
            {
            COMANDOS
            }
            _____________________
            
            COMPOSTA: 
            
            IF (CONDIÇÃO) 
            {
            COMANDOS 
            }
            ELSE
            {
            COMANDOS 
            }
            _______________________
            
            ENCADEAMENTOS: 
            
            -IF ( CONDIÇÃO) 
            {
            COMANDOS 
            }
           
           -ELSE IF ( CONDIÇÃO) 
            {
            COMANDOS 
            }
           
           - ELSE IF (CONDIÇÃO) 
            {
            COMANDOS 
            }
          
          - ELSE 
            {
            COMANDOS 
            }
            
            
            -------------------------------------
            EXEMPLO PARA SABER SE TAL NUMERO É PAR OU IMPAR 
            
            IF ( X % 2 == 0 ) // SE O RESTO DA DIVISAO  DO NUMERO X FOR 0, ELE É PAR. (PARA SABER SE O NUMERO É PAR DIVIDE SEMPRE POR 2)  
            {
            CONSOLE.WRITELINE("PAR");
            }
            
            
            
            --------------------------------------
            
            Math.Sqrt(double)  (ALGORITMO PRONTO DE RAIZ QUADRADA) 
            
            
             FAZER = 30 31 e exercicios part1/part2
             
             (FIZ PORRA NENHUMA ;) ) 
             
             
             -SENHA COM WHILE- 
             
             
             Console.WriteLine("Digite seu nome: ");
            string nome = Console.ReadLine();

            Console.WriteLine("Digite a senha:  ");
            int senha = int.Parse(Console.ReadLine());

            while (senha != 2002)
            {
                Console.Write("senha incorreta, digite novamente: ");
                senha = int.Parse(Console.ReadLine());
                

            }
            Console.WriteLine($"Senha correta, seja bem vindo {nome}");

            Console.ReadLine();
            }
            
             
             




             
             
             
             
             
